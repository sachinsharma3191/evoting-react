{"ast":null,"code":"var _jsxFileName = \"/Users/sachinsharma/sachin/evoting-react/Frontend/src/Candidate/Candidates.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"underscore\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Candidate from \"./Candidate\";\nconst base64Flag = \"data:image/jpeg;base64,\";\n\nclass Candidates extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      axios.get(\"http://localhost:3002/candidate/all\").then(res => {\n        this.setState({\n          candidates: res.data.data,\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: error,\n          loading: false\n        });\n      });\n    };\n\n    this.arrayBufferToBase64 = buffer => {\n      var binary = \"\";\n      var bytes = [].slice.call(new Uint8Array(buffer));\n      bytes.forEach(b => binary += String.fromCharCode(b));\n      return window.btoa(binary);\n    };\n\n    this.getCandidateImage = async candidate => {\n      let first_name = candidate.split(\"_\")[0];\n      let candidates = [...this.state.candidates];\n      let imageStr = null;\n      await axios.get(\"http://localhost:3002/candidate/image/\" + candidate).then(res => {\n        imageStr = this.arrayBufferToBase64(res.data.image.data);\n      }).catch(err => {\n        console.log(err.response);\n      });\n\n      for (let candidate of candidates) {\n        if (candidate.first_name === first_name) {\n          candidate[\"image\"] = base64Flag + imageStr;\n        }\n      }\n\n      this.setState({\n        candidates\n      });\n    };\n\n    this.showDetails = id => {\n      if (_.isNumber(id)) {\n        const candidate = this.state.candidates.filter(candidate => candidate.id === id);\n        this.props.history.push({\n          pathname: \"/CandidateDetail\",\n          state: {\n            candidateDetails: candidate\n          }\n        });\n      }\n    };\n\n    this.state = {\n      candidates: [],\n      error: null,\n      loading: true\n    };\n    this.showDetails = this.showDetails.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  vote(id) {}\n\n  render() {\n    const {\n      loading,\n      candidates\n    } = this.state;\n    let ui = null;\n\n    if (loading && _.isEmpty(candidates)) {\n      ui = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }\n\n    if (!_.isEmpty(candidates)) {\n      ui = candidates.map(candidate => {\n        if (_.isEmpty(candidate[\"image\"])) {\n          const fullName = candidate.first_name + \"_\" + candidate.last_name;\n          this.getCandidateImage(fullName);\n        }\n\n        return React.createElement(Candidate, {\n          showDetails: this.showDetails,\n          key: candidate.id,\n          candidate: candidate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, ui);\n  }\n\n}\n\nexport default withRouter(Candidates);","map":{"version":3,"sources":["/Users/sachinsharma/sachin/evoting-react/Frontend/src/Candidate/Candidates.js"],"names":["React","Component","axios","withRouter","_","Spinner","Candidate","base64Flag","Candidates","constructor","props","componentDidMount","get","then","res","setState","candidates","data","loading","catch","error","console","log","arrayBufferToBase64","buffer","binary","bytes","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","getCandidateImage","candidate","first_name","split","state","imageStr","image","err","response","showDetails","id","isNumber","filter","history","push","pathname","candidateDetails","bind","vote","render","ui","isEmpty","map","fullName","last_name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"underscore\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Candidate from \"./Candidate\";\n\nconst base64Flag = \"data:image/jpeg;base64,\";\n\nclass Candidates extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      candidates: [],\n      error: null,\n      loading: true,\n    };\n    this.showDetails = this.showDetails.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount = async () => {\n    axios\n      .get(\"http://localhost:3002/candidate/all\")\n      .then((res) => {\n        this.setState({ candidates: res.data.data, loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ error: error, loading: false });\n      });\n  };\n\n  arrayBufferToBase64 = (buffer) => {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n    return window.btoa(binary);\n  };\n\n  getCandidateImage = async (candidate) => {\n    let first_name = candidate.split(\"_\")[0];\n\n    let candidates = [...this.state.candidates];\n\n    let imageStr = null;\n\n    await axios\n      .get(\"http://localhost:3002/candidate/image/\" + candidate)\n      .then((res) => {\n        imageStr = this.arrayBufferToBase64(res.data.image.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n    for (let candidate of candidates) {\n      if (candidate.first_name === first_name) {\n        candidate[\"image\"] = base64Flag + imageStr;\n      }\n    }\n    this.setState({ candidates });\n  };\n\n  showDetails = (id) => {\n    if (_.isNumber(id)) {\n      const candidate = this.state.candidates.filter(\n        (candidate) => candidate.id === id\n      );\n      this.props.history.push({\n        pathname: \"/CandidateDetail\",\n        state: { candidateDetails: candidate },\n      });\n    }\n  };\n\n  vote(id) {\n\n  }\n\n  render() {\n    const { loading, candidates } = this.state;\n\n    let ui = null;\n    if (loading && _.isEmpty(candidates)) {\n      ui = <Spinner />;\n    }\n    if (!_.isEmpty(candidates)) {\n      ui = candidates.map((candidate) => {\n        if (_.isEmpty(candidate[\"image\"])) {\n          const fullName = candidate.first_name + \"_\" + candidate.last_name;\n          this.getCandidateImage(fullName);\n        }\n        return (\n          <Candidate\n            showDetails={this.showDetails}\n            key={candidate.id}\n            candidate={candidate}\n          />\n        );\n      });\n    }\n    return <div className=\"row\">{ui}</div>;\n  }\n}\n\nexport default withRouter(Candidates);\n"]},"metadata":{},"sourceType":"module"}